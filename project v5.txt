PART A

##PLAYER A

player.A<- function(money) {
  moneyk <- money
  counterA<- 1
  while (counterA < 127) { 
    win <- sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1) {
      money = money + 1
      counterA = counterA + 1
    } 
    else {
      money = money - 1
      counterA = counterA + 1
    } 
  }
  winnings = money - moneyk
  cat(winnings, counterA)
}

##PLAYER B

player.B <- function(money,W, moneyk =0){
  moneyk <- money
  lim <- money + W
  Bet <- 1
  counterB<-0
  while (money != 0  & money <= lim & money >= Bet){
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1){
      money <- money+Bet
      Bet <- 2*Bet
      counterB <- counterB+1
    }
    else {
      money <- money-Bet
      Bet <- 1
      counterB <- counterB+1
    }
  }
  winnings=money-moneyk
  cat(winnings,counterB)
}

##PLAYER C

player.C <- function(money ,W, moneyk =0){
  moneyk <- money
  lim <- money + W
  Bet <- 1
  counterC<-0
  while (money != 0  & money <= lim & money >= Bet){
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1){
      money <- money+Bet
      Bet <- 1
      counterC <- counterC+1
    }
    else {
      money <- money-Bet
      Bet <- 2*Bet
      counterC <- counterC+1
    }
  }
  winnings = money-moneyk
  cat(winnings,counterC)
}

##PLAYER D

player.D <- function(money, W, BetD = 0, numbers = c(0)){
  numbers <- c(1,2,3,4)
  moneyk <- money
  lim <- money + W
  counter <- 0
  counterD <- 0
  while(money != 0 & money <= lim & money >= BetD) {
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    BetD <- numbers[1] + numbers[length(numbers)]
    if (win==1)
    {
      numbers <- numbers[c(-1,-numbers[length(numbers)])]
      money <- money + BetD
      if(length(numbers) < 1){
        numbers <- c(1,2,3,4)
      }
      counterD <-counterD+1
    }
    else {
      money <- money - BetD
      numbers <- append(numbers, BetD)
      counter<- sum(counter+1)
      counterD <- counterD+1
    }
    # return(numbers)
  }
  winnings = money-moneyk
  cat(winnings,counterD)
}

##PLAYER E

fibonacci  <- function(n)
{
  if (n < 1) return(1)
  if (n == 1) return(1)
  if (n == 2) return(1) 
  return(fibonacci(n-1)+fibonacci(n-2)) 
}

player.E <- function(money ,W =0, moneyk =0){
  moneyk <- money
  lim <- money + W
  Bet <- 1
  n <- 1
  counterE<-0
  while (money != 0  & money < lim & money >= Bet){
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1){
      money <- money+Bet
      n<-n-2
      Bet <- fibonacci(n)
      counterE <- counterE+1
    }
    else {
      money <- money-Bet
      n<- n+1
      Bet <-fibonacci(n)
      counterE <- counterE+1
    }
  }
  winnings = money-moneyk
  cat(winnings,counterE)
}

######################################################################################

PART B

##PLAYER A MONEY

player.A<- function(money, p=0) {
  moneyk <- money
  counterA<- 1
  while (counterA < 127) { 
    win <- sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1) {
      money = money + 1
      counterA = counterA + 1
    } 
    else {
      money = money - 1
      counterA = counterA + 1
    } 
  }
  if (money > 127){
    score <- 1
  } 
  else {
    score <- 0
  }
  if (p==1) return(money-moneyk)
  if (p==2) return(score)
  if (p==3) return(moneyk)
  else cat('error')
}
money.a <- replicate(100000,player.A(127,1))
mean(money.a)
sd(money.a)
money.a <- replicate(100000,player.A(127,1))
mean(money.a)
sd(money.a)
money.a <- replicate(100000,player.A(127,1))
mean(money.a)
sd(money.a)

## PLAYER A PROPORTION COUNT

count.a <- replicate(100000,player.A(127,2))
mean(count.a)
sd(count.a)
count.a <- replicate(100000,player.A(127,2))
mean(count.a)
sd(count.a)
count.a <- replicate(100000,player.A(127,2))
mean(count.a)
sd(count.a)

#PLAYER A PLAY TIME

play.a <- replicate(100000,player.A(127,3))
mean(play.a)
sd(play.a)
play.a <- replicate(100000,player.A(127,3))
mean(play.a)
sd(play.a)
play.a <- replicate(100000,player.A(127,3))
mean(play.a)
sd(play.a)



#################################

##PLAYER B MONEY

player.B <- function(money,W,p=0, moneyk =0){
  moneyk <- money
  lim <- money + W
  Bet <- 1
  tick <-0
  while (money != 0  & money <= lim & money >= Bet){
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1){
      money <- money+Bet
      Bet <- 2*Bet
    }
    else {
      money <- money-Bet
      Bet <- 1
    }
    tick <- tick+1
  }
  if (money >= lim){
    score <- 1
  } 
  else {
    score <- 0
  }
  winnings = money-moneyk
  if (p==1) return(winnings)
  if (p==2) return(score)
  if (p==3) return(tick)
  else cat('error')
}
money.B <- replicate(100000,player.B(127,10,1))
mean(money.B)
sd(money.B)
money.B <- replicate(100000,player.B(127,20,1))
mean(money.B)
sd(money.B)
money.B <- replicate(100000,player.B(127,30,1))
mean(money.B)
sd(money.B)

## PLAYER B PROPORTION COUNT

count.b <- replicate(100000,player.B(127,10,2))
mean(count.b)
sd(count.b)
count.b <- replicate(100000,player.B(127,10,2))
mean(count.b)
sd(count.b)
count.b <- replicate(100000,player.B(127,10,2))
mean(count.b)
sd(count.b)

#PLAYER B PLAY TIME

play.b <- replicate(100000,player.B(127,10,3))
mean(play.b)
sd(play.b)
play.b <- replicate(100000,player.B(127,10,3))
mean(play.b)
sd(play.b)
play.b <- replicate(100000,player.B(127,10,3))
mean(play.b)
sd(play.b)

##################

##PLAYER C MONEY

player.C <- function(money,W,p=0, moneyk =0){
  moneyk <- money
  lim <- money + W
  Bet <- 1
  tick <- 0
  while (money != 0  & money <= lim & money >= Bet){
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1){
      money <- money+Bet
      Bet <- 1
    }
    else {
      money <- money-Bet
      Bet <- 2*Bet
    }
    tick <- tick+1
  }
  if (money >= lim){
    score <- 1
  } 
  else {
    score <- 0
  }
  winnings = money-moneyk
  if (p==1) return(winnings)
  if (p==2) return(score)
  if (p==3) return(tick)
  else cat('error')
}

money.c <- replicate(100000,player.C(127,10,1))
mean(money.c)
sd(money.c)
money.c <- replicate(100000,player.C(127,20,1))
mean(money.c)
sd(money.c)
money.c <- replicate(100000,player.C(127,30,1))
mean(money.c)
sd(money.c)

## PLAYER C PROPORTION COUNT

count.c <- replicate(100000,player.C(127,10,2))
mean(count.c)
sd(count.c)
count.c <- replicate(100000,player.C(127,10,2))
mean(count.c)
sd(count.c)
count.c <- replicate(100000,player.C(127,10,2))
mean(count.c)
sd(count.c)

#PLAYER C PLAY TIME

play.c <- replicate(100000,player.C(127,10,3))
mean(play.c)
sd(play.c)
play.c <- replicate(100000,player.C(127,10,3))
mean(play.c)
sd(play.c)
play.c <- replicate(100000,player.C(127,10,3))
mean(play.c)
sd(play.c)


####################

##PLAYER D Money

player.D <- function(money, W, p=0, BetD = 0, numbers = c(0)){
  numbers <- c(1,2,3,4)
  moneyk <- money
  lim <- money + W
  tick <- 0
  while(money != 0 & money <= lim & money >= BetD) {
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    BetD <- numbers[1] + numbers[length(numbers)]
    if (win==1)
    {
      numbers <- numbers[c(-1,-numbers[length(numbers)])]
      money <- money + BetD
      if(length(numbers) < 1){
        numbers <- c(1,2,3,4)
      }
    }
    else {
      money <- money - BetD
      numbers <- append(numbers, BetD)
    } 
    tick <- tick+1
  }
  if (money >= lim){
    score <- 1
  } 
  else {
    score <- 0
  }
  winnings = money-moneyk
  if (p==1) return(winnings)
  if (p==2) return(score)
  if (p==3) return(tick)
  else cat('error')
}


money.d <- replicate(100000,player.D(127,10,1))
mean(money.d)
sd(money.d)
money.d <- replicate(100000,player.D(127,20,1))
mean(money.d)
sd(money.d)
money.d <- replicate(100000,player.D(127,30,1))
mean(money.d)
sd(money.d)

## PLAYER D PROPORTION COUNT

count.d <- replicate(100000,player.D(127,10,2))
mean(count.d)
sd(count.d)
count.d <- replicate(100000,player.D(127,10,2))
mean(count.d)
sd(count.d)
count.d <- replicate(100000,player.D(127,10,2))
mean(count.d)
sd(count.d)

#PLAYER D PLAY TIME

play.d <- replicate(100000,player.D(127,10,3))
mean(play.d)
sd(play.d)
play.d <- replicate(100000,player.D(127,10,3))
mean(play.d)
sd(play.d)
play.d <- replicate(100000,player.D(127,10,3))
mean(play.d)
sd(play.d)



###########################

PLAYER E

fibonacci  <- function(n)
{
  if (n < 1) return(1)
  if (n == 1) return(1)
  if (n == 2) return(1) 
  return(fibonacci(n-1)+fibonacci(n-2)) 
}

## PLAYER E MONEY COUNT 

player.E <- function(money, W, p=0, moneyk =0){
  moneyk <- money
  lim <- money + W
  Bet <- 1
  n <- 1
  tick <- 0
  counter<-0
  while (money != 0  & money < lim & money >= Bet){
    win <-sample(x=c(0,1), size=1, prob=c(0.52631578947,0.47368421052))
    if (win==1){
      money <- money+Bet
      n<-n-2
      Bet <- fibonacci(n)
    }
    else {
      money <- money-Bet
      n<- n+1
      Bet <-fibonacci(n)
    } 
    tick <- tick+1
  }
  if (money >= lim){
    score <- 1
  } 
  else {
    score <- 0
  }
  winnings = money-moneyk
  if (p==1) return(winnings)
  if (p==2) return(score)
  if (p==3) return(tick)
  else cat('error')
}

money.e <- replicate(100000,player.E(127,10,1))
mean(money.e)
sd(money.e)
money.e <- replicate(100000,player.E(127,20,1))
mean(money.e)
sd(money.e)
money.e <- replicate(100000,player.E(127,30,1))
mean(money.e)
sd(money.e)

## PLAYER E PROPORTION COUNT

count.e <- replicate(100000,player.E(127,10,2))
mean(count.e)
sd(count.e)
count.e <- replicate(100000,player.E(127,10,2))
mean(count.e)
sd(count.e)
count.e <- replicate(100000,player.E(127,10,2))
mean(count.e)
sd(count.e)

#PLAYER E PLAY TIME

play.e <- replicate(100000,player.E(127,10,3))
mean(play.e)
sd(play.e)
play.e <- replicate(100000,player.E(127,10,3))
mean(play.e)
sd(play.e)
play.e <- replicate(100000,player.E(127,10,3))
mean(play.e)
sd(play.e)


#ASK


ask <- function (rep,method,money, W=0){
  if(method=='A'){
    MM <- replicate(rep,player.A(money,1))
    CC <- replicate(rep,player.A(money,2))
    PP<- replicate(rep,player.A(money,3))
  }
  if(method=='B'){
    MM <- replicate(rep,player.B(money,W,1))
    CC <- replicate(rep,player.B(money,W,2))
    PP <- replicate(rep,player.B(money,W,3))
  }
  if(method=='C'){
    MM <- replicate(rep,player.C(money,W,1))
    CC <- replicate(rep,player.C(money,W,2))
    PP<- replicate(rep,player.C(money,W,3))
  }
  if(method=='D'){
    MM <- replicate(rep,player.D(money,W,1))
    CC <- replicate(rep,player.D(money,W,2))
    PP<- replicate(rep,player.D(money,W,3))
  }
  if(method=='E'){
    MM<- replicate(rep,player.E(money,W,1))
    CC <- replicate(rep,player.E(money,W,2))
    PP<- replicate(rep,player.E(money,W,3))
  }
  cat('Winning Mean:', mean(MM),'  
')
  cat('Winning SD:', sd(MM),'
')
  cat('Proportion Mean:',mean(CC),'
')
  cat('Proportion SD:', sd(CC),'
')
  cat('Play time Mean:', mean(PP),'
')
  cat('Play time SD:', sd(PP),'
')
}

ask(100000,'E',127,10)
